[{"/Users/younissaleh/Desktop/todo/src/App.js":"1","/Users/younissaleh/Desktop/todo/src/reportWebVitals.js":"2","/Users/younissaleh/Desktop/todo/src/index.js":"3"},{"size":3298,"mtime":1606152369676,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1606147558552,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1606147558550,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"g9b7hl",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/younissaleh/Desktop/todo/src/App.js",["15"],"// import logo from \"./logo.svg\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  //useref we gonna check for your initial first load of our page\n  //\n  const firstRender = useRef(true);\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [toDos, setToDos] = useState([]);\n\n  const addTodo = (e) => {\n    e.preventDefault();\n\n    // to not add empty string to not runturn to not let th next line run\n    if (inputValue.trim() === \"\") return;\n\n    setToDos([\n      ...toDos,\n      {\n        text: inputValue,\n        id: uuidv4(),\n      },\n    ]);\n    setInputValue(\"\");\n  };\n\n  // function to remove the Todos\n  const removeTodo = (id) => {\n    // it ill return all the elemnts in ou =r todo list EXCEPT THE ONE WE CLICK ON\n    // NOT THE ID WE CLICK ON\n    setToDos(toDos.filter((todo) => todo.id !== id));\n  };\n\n  useEffect(() => {\n    if (firstRender.current) {\n      // console.log(\"true \");\n      firstRender.current = false;\n    } else {\n      // to set items in out local storage\n      localStorage.setItem(\"Todo\", JSON.stringify([...toDos]));\n      // console.log(\"not first page load\");\n    }\n  }, [toDos]);\n\n  // to get the todoes list from our local storage\n\n  useEffect(() => {\n    if (localStorage.getItem(\"Todo\") !== null) {\n      const newToDos = localStorage.getItem(\"Todo\");\n      setToDos(JSON.parse([...toDos, newToDos]));\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <form onSubmit={addTodo}>\n          <input\n            autoFocus\n            type=\"text\"\n            placeholder=\"Add a task....\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n        {toDos.map((todo) => (\n          <div key={todo.id} className=\"todo\">\n            <p>{todo.text}</p>\n            <i onClick={() => removeTodo(todo.id)} className=\"fas fa-trash\"></i>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// const App = () => {\n//   const [inputValue, setInputValue] = useState(\"\");\n//   const [todos, setTodos] = useState([]);\n\n//   const addTodo = (e) => {\n//     // console.log(\"test\");\n//     e.preventDefault();\n\n//     // out put the todos,  we have and array and object and we have access to the text and id wi\n//     setTodos([\n//       ...todos,\n//       {\n//         text: inputValue,\n//         id: uuidv4(),\n//       },\n//     ]);\n//     // clear our inputValue\n//     setInputValue(\"\");\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"container\">\n//         <form onSubmit={addTodo}>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Add a task...\"\n//             value={inputValue}\n//             // whatever we writ is gonna get store in out input value state insted of empty string\n//             onChange={(e) => setInputValue(e.target.value)}\n//           />\n//           <button type=\"submit\">Add</button>\n//         </form>\n//         {todos.map((todo) => {\n//           <div key={todo.id} className=\"todo\">\n//             <p>{todo.text}</p>\n//           </div>;\n//         })}\n//       </div>\n//     </div>\n//   );\n// };\n\nexport default App;\n","/Users/younissaleh/Desktop/todo/src/reportWebVitals.js",[],"/Users/younissaleh/Desktop/todo/src/index.js",[],{"ruleId":"16","severity":1,"message":"17","line":55,"column":6,"nodeType":"18","endLine":55,"endColumn":8,"suggestions":"19"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'toDos'. Either include it or remove the dependency array. You can also do a functional update 'setToDos(t => ...)' if you only need 'toDos' in the 'setToDos' call.","ArrayExpression",["20"],{"desc":"21","fix":"22"},"Update the dependencies array to be: [toDos]",{"range":"23","text":"24"},[1454,1456],"[toDos]"]